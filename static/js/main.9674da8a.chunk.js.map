{"version":3,"sources":["component/contactForm/ContactForm.module.css","component/transitions/ForWarnings.module.css","component/filter/filter.module.css","component/contactList/elementListContacts.module.css","component/app.module.css","component/already/already.module.css","component/nothing/nothing.module.css","component/transitions/forContactList.module.css","component/transitions/forTitle.module.css","component/transitions/ForFilter.module.css","component/contactForm/contactForm.js","component/contactList/elementListContact.js","component/contactList/ContactList .js","component/filter/filter.js","component/already/Already.js","component/nothing/Nothing.js","component/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","reset","this","className","styles","form","onSubmit","spanText","type","onChange","autoComplete","input","minLength","btn","Component","ElementListContact","list","onDeleteContact","close","onClick","id","ContactList","listContacts","TransitionGroup","component","map","CSSTransition","key","timeout","unmountOnExit","classNames","forContactList","Filter","onchangeFilter","wrap","text","Already","wrapper","Nothing","App","contacts","filter","isOpen","isAlready","isNothing","changeFilter","addListWithContactForm","task","cont","includes","setTimeout","length","contactToAdd","shortId","generate","deleteContact","contactsLength","filteredContacts","contact","toLowerCase","filterContacts","boolForFilter","in","forTitle","ForAlready","ForNothing","propContacts","ForFilter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9674da8a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3SFqe\",\"spanText\":\"ContactForm_spanText__37XsS\",\"btn\":\"ContactForm_btn__3nkbC\",\"input\":\"ContactForm_input__yedDm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ForWarnings_enter__3AE0O\",\"enterActive\":\"ForWarnings_enterActive__2Slyy\",\"exit\":\"ForWarnings_exit__eU0z7\",\"exitActive\":\"ForWarnings_exitActive__2oaJK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"filter_wrap__1WYYi\",\"text\":\"filter_text__U8xc0\",\"input\":\"filter_input__3zdXP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"elementListContacts_list__2sFrE\",\"close\":\"elementListContacts_close__3SXCg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"app_wrapper__3UMaW\",\"text\":\"app_text__3cDUD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"already_wrapper__3KwL4\",\"text\":\"already_text__3LhCm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"nothing_wrapper__3N4Em\",\"text\":\"nothing_text__2j3PE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"forContactList_enter__BHBeJ\",\"enterActive\":\"forContactList_enterActive__1xYmf\",\"exit\":\"forContactList_exit__5QftY\",\"exitActive\":\"forContactList_exitActive__3GU8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"forTitle_enter__2W8Jv\",\"enterActive\":\"forTitle_enterActive__1ML1b\",\"exit\":\"forTitle_exit__Y3uNR\",\"exitActive\":\"forTitle_exitActive__1d0Hl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ForFilter_enter__2OmP-\",\"enterActive\":\"ForFilter_enterActive__1GVDt\",\"exit\":\"ForFilter_exit__1ANMI\",\"exitActive\":\"ForFilter_exitActive__3WZXJ\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport default class ContactForm extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.target;\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onAddContact({ ...this.state })\r\n        this.reset()\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState(\r\n            {\r\n                name: '',\r\n                number: ''\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <form className={styles.form} onSubmit={this.handleSubmit}>\r\n                    <span className={styles.spanText}>Name</span>\r\n                    <label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={name}\r\n                            onChange={this.handleChange}\r\n                            autoComplete=\"off\"\r\n                            className={styles.input}\r\n\r\n                        />\r\n                    </label>\r\n\r\n                    <span className={styles.spanText}>Number</span>\r\n                    <label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"number\"\r\n                            value={number}\r\n                            onChange={this.handleChange}\r\n                            autoComplete=\"off\"\r\n                            minLength={5}\r\n                            className={styles.input}\r\n                        />\r\n                    </label>\r\n                    <button className={styles.btn} type=\"submit\">Add contact</button>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n}\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './elementListContacts.module.css';\r\n\r\n\r\n\r\nconst ElementListContact = ({ list, onDeleteContact }) => (\r\n    <li className={styles.list}>{list.name} <span>{list.number}</span>\r\n        <button className={styles.close} type=\"button\" onClick={() => onDeleteContact(list.id)}></button>\r\n    </li>\r\n)\r\n\r\n\r\nexport default ElementListContact;\r\n\r\n\r\nElementListContact.propTypes = {\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n    list: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n    }),\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ElementListContact from './elementListContact';\r\n\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport forContactList from '../transitions/forContactList.module.css';\r\n\r\nconst ContactList = ({ listContacts, onDeleteContact }) => {\r\n    return (\r\n        <>\r\n            <TransitionGroup component=\"ul\">\r\n                {listContacts.map(list => (\r\n                    <CSSTransition key={list.id} timeout={250} unmountOnExit classNames={forContactList}>\r\n                        < ElementListContact list={list} onDeleteContact={onDeleteContact} />\r\n                    </CSSTransition>\r\n                ))}\r\n            </TransitionGroup>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nContactList.propTypes = {\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n    listContacts: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n    })),\r\n}\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport styles from './filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onchangeFilter }) => (\r\n    <div className={styles.wrap}>\r\n        <span className={styles.text}>Find contacts by name: </span>\r\n        <input\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={onchangeFilter}\r\n            className={styles.input}\r\n        />\r\n    </div>\r\n)\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onchangeFilter: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport styles from './already.module.css';\r\n\r\nconst Already = () => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <p className={styles.text}>Contacts already exists!</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Already;","import React from 'react';\r\nimport styles from './nothing.module.css';\r\n\r\nconst Nothing = () => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <p className={styles.text}>Fields must be filled!</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nothing;","import React, { Component } from 'react';\r\nimport ContactForm from './contactForm/contactForm';\r\nimport ContactList from './contactList/ContactList ';\r\nimport Filter from './filter/filter';\r\nimport shortId from 'shortid';\r\n\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport styles from './app.module.css';\r\nimport forTitle from './transitions/forTitle.module.css';\r\nimport Already from './already/Already';\r\nimport ForAlready from './transitions/ForWarnings.module.css';\r\nimport Nothing from './nothing/Nothing';\r\nimport ForNothing from './transitions/ForWarnings.module.css'\r\nimport ForFilter from './transitions/ForFilter.module.css';\r\n\r\n\r\n\r\nconst filterContacts = (contacts, filter) => {\r\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\r\n};\r\n\r\nexport default class App extends Component {\r\n\r\n    state = {\r\n        contacts: [\r\n            { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n            { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n            { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n        ],\r\n        filter: '',\r\n        isOpen: false,\r\n        isAlready: false,\r\n        isNothing: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isOpen: true })\r\n    }\r\n\r\n    changeFilter = e => {\r\n        this.setState({ filter: e.target.value })\r\n    }\r\n\r\n    addListWithContactForm = task => {\r\n\r\n        const searchSameName = this.state.contacts.map(cont => cont.name).includes(task.name)\r\n\r\n        if (searchSameName) {\r\n            this.setState({ isAlready: true })\r\n            setTimeout(() => {\r\n                this.setState({ isAlready: false });\r\n            }, 2000);\r\n        } else if (task.name.length === 0) {\r\n            this.setState({ isNothing: true });\r\n            setTimeout(() => {\r\n                this.setState({ isNothing: false });\r\n            }, 2000);\r\n\r\n        } else {\r\n            const contactToAdd = {\r\n                ...task,\r\n                id: shortId.generate(),\r\n            };\r\n\r\n            this.setState(state => ({\r\n                contacts: [contactToAdd, ...state.contacts],\r\n            }));\r\n        }\r\n    };\r\n\r\n    deleteContact = id => {\r\n        this.setState(state => ({\r\n            contacts: state.contacts.filter(cont => cont.id !== id)\r\n        }));\r\n    };\r\n\r\n    contactsLength = () => {\r\n        const { contacts } = this.state;\r\n        return contacts.length >= 2;\r\n    }\r\n\r\n    render() {\r\n        const { contacts, filter, isOpen, isAlready, isNothing } = this.state;\r\n        const filteredContacts = filterContacts(contacts, filter)\r\n        const boolForFilter = this.contactsLength()\r\n\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <CSSTransition in={isOpen} timeout={500} unmountOnExit classNames={forTitle}>\r\n                    <h1 className={styles.text}>Phonebook</h1>\r\n                </CSSTransition>\r\n                <CSSTransition in={isAlready} timeout={250} unmountOnExit classNames={ForAlready}>\r\n                    <Already />\r\n                </CSSTransition>\r\n                <CSSTransition in={isNothing} timeout={250} unmountOnExit classNames={ForNothing}>\r\n                    <Nothing />\r\n                </CSSTransition>\r\n                <ContactForm propContacts={contacts} onAddContact={this.addListWithContactForm} />\r\n                <CSSTransition in={boolForFilter} timeout={250} unmountOnExit classNames={ForFilter}>\r\n                    < Filter value={filter} onchangeFilter={this.changeFilter} />\r\n                </CSSTransition>\r\n                <ContactList listContacts={filteredContacts} onDeleteContact={this.deleteContact} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './component/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}